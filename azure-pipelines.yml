# Gradle

# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:

# https://docs.microsoft.com/azure/devops/pipelines/languages/java
# https://docs.microsoft.com/azure/devops/pipelines/languages/android
# https://docs.microsoft.com/en-au/azure/devops/pipelines/?view=azure-devops

# Triggers
trigger:
  batch: true
  branches:
    include:
      - '*'


# Define Stages & Jobs
stages:
  - stage: Pre
    jobs:
      - job: GradleClean
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: Gradle@2
            inputs:
              gradleWrapperFile: 'gradlew'
              gradleOptions: '-Xmx3072m'
              jdkVersionOption: '1.8'
              jdkArchitectureOption: 'x64'
              tasks: 'clean'

  - stage: Build
    jobs:
      - job: GradleAssemble
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: Gradle@2
            enabled: true
            inputs:
              gradleWrapperFile: 'gradlew'
              gradleOptions: '-Xmx3072m'
              jdkVersionOption: '1.8'
              jdkArchitectureOption: 'x64'
              tasks: 'assemble'

  - stage: Lint
    jobs:
      - job: GradleLint
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: Gradle@2
            enabled: true
            inputs:
              gradleWrapperFile: 'gradlew'
              gradleOptions: '-Xmx3072m'
              jdkVersionOption: '1.8'
              jdkArchitectureOption: 'x64'
              tasks: 'lint'

  - stage: Test
    jobs:
      - job: GradleTest
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: Gradle@2
            inputs:
              gradleWrapperFile: 'gradlew'
              gradleOptions: '-Xmx3072m'
              jdkVersionOption: '1.8'
              jdkArchitectureOption: 'x64'
              publishJUnitResults: true
              tasks: 'test'

