apply plugin: 'java'
apply plugin: 'maven'

def BINTRAY_SUBJECT = "mojio"
def BINTRAY_REPO = "maven"

def bintrayUsername = System.env["BINTRAY_USERNAME"] ?: "DEVELOPMENT"
def bintrayApiKey = System.env["BINTRAY_APIKEY"] ?: "DEVELOPMENT"

def groupId = project.PUBLISH_GROUP_ID
def artifactId = project.PUBLISH_ARTIFACT_ID
def version = project.PUBLISH_VERSION

def localReleaseDest = "${buildDir}/release/${version}"
def archiveFilename = "${artifactId}-${version}.zip"

javadoc {
    failOnError = false
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar, javadocJar
}

install {
    repositories.mavenInstaller {
        pom.groupId = groupId
        pom.artifactId = artifactId
        pom.version = version
    }
}

/*uploadArchives() {
    description = "Uploads all Maven artifacts to BinTray"
    group = "Maven"

    repositories {
        mavenDeployer {
            repository(url: "https://api.bintray.com/maven/${BINTRAY_SUBJECT}/${BINTRAY_REPO}/${groupId}:${artifactId}/;publish=1") {
                authentication(userName: bintrayUsername, password: bintrayApiKey)
            }

            pom.groupId = groupId
            pom.artifactId = artifactId
            pom.version = version
        }
    }
}*/

task generateRelease(type: Zip, group: 'Maven') {
    description = "Generates a .zip file containing jars and poms for hosting on a Maven repo"

    from localReleaseDest
    destinationDir buildDir
    archiveName archiveFilename

    doLast {
        println "Release ${version} can be found at ${localReleaseDest}/"
        println "Release ${version} zipped can be found ${buildDir}/${archiveFilename}"
    }
}

uploadArchives.dependsOn(generateRelease)